@property --rotation-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 45deg;
}
@property --rotation {
  syntax: "<angle>";
  inherits: true;
  initial-value: 45deg;
}
@property --background-inicator-y {
  syntax: "<angle>";
  inherits: false;
  initial-value: 45deg;
}
.sample-gradient {
  --rotation-angle: 45deg;
  background-image: linear-gradient(var(--rotation-angle), var(--yellow), var(--orange), var(--red), var(--magenta), var(--purple), var(--blue), var(--teal), var(--green));
  background-size: 100% 100%;
  background-repeat: no-repeat;
  height: 100vh;
  font-size: clamp(1rem, 9vw, 14rem);
  line-height: 0.85;
  font-weight: 900;
  box-sizing: border-box;
  padding: 2vw 2vw;
  color: transparent;
  -webkit-background-clip: text;
          background-clip: text;
  animation: rotate-background 60s ease-in-out infinite;
  text-transform: uppercase;
}

.animated {
  --rotation: 45deg;
  background-image: linear-gradient(var(--rotation-angle), var(--yellow) 0, var(--red) 25%, var(--orange) 50%, var(--magenta) 75%, var(--purple) 100%);
  background-size: 200% 200%;
}

@keyframes move-background {
  0% {
    background-position: 0 0;
  }
  35% {
    background-position: 100% 100%;
  }
  50% {
    background-position: 100% 0;
  }
  65% {
    background-position: 0 100%;
  }
  100% {
    background-position: 0 0;
  }
}
@keyframes rotate-background {
  0% {
    --rotation-angle: 0deg;
    background-position: 0 0;
  }
  35% {
    background-position: 100% 100%;
  }
  50% {
    --rotation-angle: 180deg;
    background-position: 100% 0;
  }
  75% {
    background-position: 0 100%;
  }
  100% {
    --rotation-angle: 360deg;
    background-position: 0 0;
  }
}
.body-center {
  margin: auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: space-around;
  align-items: center;
  align-content: center;
  width: 400px;
  height: 300px;
}

.show-gradient {
  margin: auto;
  width: 20svw;
}
.show-gradient:after {
  content: " ";
  display: block;
}

.sg-color-box {
  box-sizing: border-box;
  display: flex;
  content: " ";
  height: 80px;
  width: 80px;
  aspect-ratio: 1/1;
  justify-content: flex-end;
  align-items: flex-end;
  text-align: right;
  padding: 0.5rem;
}

.sg-color-grid {
  display: inline-grid;
  grid-auto-flow: column;
  grid-template-rows: repeat(3, 80px);
  grid-template-columns: repeat(auto, 80px);
  margin-inline: auto;
}

.color-stage {
  min-height: 100vh;
  min-width: 100vh;
  display: block;
  content: " ";
  background: linear-gradient(-135deg, var(--dark-blue) 0%, var(--blue), var(--light-blue));
}

@keyframes cycle-colors {
  0% {
    background-color: var(--off-white);
  }
  10% {
    background-color: var(--mid-gray);
  }
  20% {
    background-color: var(--brown);
  }
  30% {
    background-color: var(--yellow);
  }
  40% {
    background-color: var(--orange);
  }
  50% {
    background-color: var(--red);
  }
  60% {
    background-color: var(--magenta);
  }
  70% {
    background-color: var(--blue);
  }
  80% {
    background-color: var(--teal);
  }
  90% {
    background-color: var(--green);
  }
}
.card-test {
  max-width: 420px;
  height: auto;
  margin: 15vh auto;
  aspect-ratio: 16/9;
  background: url(/images/background.jpg);
  background-repeat: no-repeat;
  background-size: cover;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
